version: '3.8'

services:
  auth-service:
    build:
      context: ./auth-service
    container_name: auth-service
    volumes:
      - ./auth-service:/var/www
    ports:
      - "8001:8000"
    working_dir: /var/www
    command: php artisan serve --host=0.0.0.0 --port=8000
    networks:
      - app-network

  fleet-service:
    build:
      context: ./fleet-service
    container_name: fleet-service
    volumes:
      - ./fleet-service:/var/www
    ports:
      - "8002:8000"
    working_dir: /var/www
    command: php artisan serve --host=0.0.0.0 --port=8000
    networks:
      - app-network

  booking-service:
    build:
      context: ./booking-service
    container_name: booking-service
    volumes:
      - ./booking-service:/var/www
    ports:
      - "8003:8000"
    working_dir: /var/www
    command: php artisan serve --host=0.0.0.0 --port=8000
    networks:
      - app-network

  notification-service:
    build:
      context: ./notification-service
    container_name: notification-service
    volumes:
      - ./notification-service:/var/www
    working_dir: /var/www
    command: php artisan queue:work
    depends_on:
      - redis
    networks:
      - app-network

  api-gateway:
    build:
      context: ./api-gateway
    container_name: api-gateway
    volumes:
      - ./api-gateway:/var/www
    ports:
      - "8004:8000"
    working_dir: /var/www
    command: php artisan serve --host=0.0.0.0 --port=8000
    networks:
      - app-network
    depends_on:
      - auth-service
      - fleet-service
      - booking-service
      - notification-service

  auth-db:
    image: mysql:8.0
    container_name: auth-db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: auth_db
    ports:
      - "3307:3306"
    volumes:
      - auth-db-data:/var/lib/mysql
    networks:
      - app-network

  fleet-db:
    image: mysql:8.0
    container_name: fleet-db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: fleet_db
    ports:
      - "3308:3306"
    volumes:
      - fleet-db-data:/var/lib/mysql
    networks:
      - app-network

  booking-db:
    image: mysql:8.0
    container_name: booking-db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: booking_db
    ports:
      - "3309:3306"
    volumes:
      - booking-db-data:/var/lib/mysql
    networks:
      - app-network

  notification-db:
    image: mysql:8.0
    container_name: notification-db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: notification_db
    ports:
      - "3310:3306"
    volumes:
      - notification-db-data:/var/lib/mysql
    networks:
      - app-network

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  auth-db-data:
  fleet-db-data:
  booking-db-data:
  notification-db-data:
